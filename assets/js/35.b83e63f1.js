(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{426:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript数据类型及装箱拆箱介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript数据类型及装箱拆箱介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" javascript数据类型及装箱拆箱介绍")]),t._v(" "),a("h2",{attrs:{id:"数据类型说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型说明")]),t._v(" "),a("p",[t._v("js中数据类型分为两大类：")]),t._v(" "),a("ul",[a("li",[t._v("基础数据类型（原始类型）\n"),a("ul",[a("li",[t._v("包含："),a("code",[t._v("Number、String、Boolean、Null、Undefined、Symbol（新增）")])]),t._v(" "),a("li",[t._v("按"),a("code",[t._v("值")]),t._v("访问")]),t._v(" "),a("li",[t._v("存储大小固定")]),t._v(" "),a("li",[t._v("数据存储在"),a("code",[t._v("栈（Stack）")]),t._v("内存中")])])]),t._v(" "),a("li",[t._v("引用数据类型（对象类型）\n"),a("ul",[a("li",[t._v("包含："),a("code",[t._v("Object、array、function、data")]),t._v("等")]),t._v(" "),a("li",[t._v("按"),a("code",[t._v("引用")]),t._v("访问")]),t._v(" "),a("li",[t._v("存储大小不固定")]),t._v(" "),a("li",[t._v("数据存储在"),a("code",[t._v("堆（Heap）")]),t._v("内存中;但是会在"),a("code",[t._v("栈")]),t._v("中存储指向堆内存的地址")]),t._v(" "),a("li",[t._v("在数组中,如果"),a("code",[t._v("数据类型一致")]),t._v("则分配连续内存空间,如果"),a("code",[t._v("不一致")]),t._v("则使用哈希映射分配内存空间")])])])]),t._v(" "),a("p",[t._v("常见数据类型的判断："),a("RouterLink",{attrs:{to:"/javascript/type.html"}},[t._v("请参考")])],1),t._v(" "),a("h2",{attrs:{id:"栈和堆的介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈和堆的介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈和堆的介绍")]),t._v(" "),a("p",[t._v("栈内存：栈是一块连续的内存空间；一般存储大小已知的变量；由系统自动申请和释放；栈的大小有限，如果申请的空间超过栈的空间，就有栈溢出风险；栈的内存分配遵循"),a("code",[t._v("先进后出")]),t._v("的原则"),a("br"),t._v("\n堆内存：动态分配内存，大小不固定；一般用来存储引用数据类型")]),t._v(" "),a("h2",{attrs:{id:"null和undifind的区别参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null和undifind的区别参考","aria-hidden":"true"}},[t._v("#")]),t._v(" null和undifind的区别"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v('null：表示"无"的对象，转为数值时为0；该处不应该有值'),a("br"),t._v('\nundifind：表示"无"的原始值，转为数值时为NaN。此处应该有一个值，但是还没有定义')]),t._v(" "),a("h2",{attrs:{id:"装箱介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#装箱介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 装箱介绍")]),t._v(" "),a("p",[t._v("js为了便于操作基础类型值,还提供了3种特殊的引用类型，他们是基本类型的包装类："),a("code",[t._v("Boolean、Number、String")]),a("br"),t._v("\n通过是否手动创建基础类型实例将装箱分为"),a("code",[t._v("隐式装箱")]),t._v("和"),a("code",[t._v("显示装箱")]),t._v("：")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("基本包装类型")]),t._v("和"),a("code",[t._v("引用类型")]),t._v("主要的区别就在于"),a("code",[t._v("生命周期的不同")]),t._v("；")]),t._v(" "),a("ul",[a("li",[t._v("隐式包装中的类型：每当"),a("code",[t._v("读取")]),t._v("一个基本类型时，"),a("code",[t._v("后台会自动创建一个对应的包装类型对象")]),t._v("，从而可以调用一些方法来操作数据（这也是为什么基础类型可以调用一些方法）,而自动创建的包装类型"),a("code",[t._v("只存于执行那一行的瞬间")]),t._v("，执行完后会立即被销毁；所以一般在基础类型是无法添加属性和方法")]),t._v(" "),a("li",[t._v("引用类型：执行流离开引用类型所在作用域才会销毁")])])]),t._v(" "),a("p",[t._v("隐式装箱：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会自动创建包装类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上代码后台的执行步骤")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建String类型实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  _c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在实例上调用对应的方法")]),t._v("\n_c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 销毁实例")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("显示装箱：\n"),a("code",[t._v("显示装箱")]),t._v("因为是通过"),a("code",[t._v("new")]),t._v("创建的，所以和引用类型没有什么特殊的区别")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示装箱")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"拆箱介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拆箱介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 拆箱介绍")]),t._v(" "),a("p",[t._v("拆箱和装箱正好相反；就是将引用类型转换为基础数据类型；拆箱的过程一般会调用抽象操作"),a("code",[t._v("[ToPrimitive]")]),t._v(",其内部主要的方法是"),a("code",[t._v("valueOf")]),t._v("和"),a("code",[t._v("toString")]),t._v("；在工作中最常见的拆箱就是对两个不同类型的数据进行"),a("code",[t._v("==")]),t._v("比较；"),a("RouterLink",{attrs:{to:"/QA/js-theory.html#6.JavaScript里什么情况下a==!a为true呢"}},[t._v("引申")])],1),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'666'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拆箱")]),t._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])},[],!1,null,null,null);s.default=n.exports}}]);